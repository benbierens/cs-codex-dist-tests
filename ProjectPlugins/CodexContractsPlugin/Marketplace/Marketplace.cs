using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Contracts;
using System.Numerics;

// Generated code, do not modify.

#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
namespace CodexContractsPlugin.Marketplace
{
    public partial class MarketplaceDeployment : MarketplaceDeploymentBase
    {
        public MarketplaceDeployment() : base(BYTECODE) { }
        public MarketplaceDeployment(string byteCode) : base(byteCode) { }
    }

    public class MarketplaceDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60c06040523480156200001157600080fd5b50604051620040ef380380620040ef8339810160408190526200003491620004f1565b60208301518051608052816101004311620000965760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420626c6f636b206865696768740000000000000060448201526064015b60405180910390fd5b81516000908155602083015160015560408301516002805460ff191660ff9092169190911790556060830151839190600390620000d4908262000691565b50608091909101516004909101805460ff191660ff928316179055600580546001600160a01b0319166001600160a01b0393841617905590841660a05284515160649116111590506200016a5760405162461bcd60e51b815260206004820152601560248201527f4d757374206265206c657373207468616e20313030000000000000000000000060448201526064016200008d565b606483600001516060015160ff161115620001c85760405162461bcd60e51b815260206004820152601560248201527f4d757374206265206c657373207468616e20313030000000000000000000000060448201526064016200008d565b82516060810151602090910151606491620001e3916200075d565b60ff161115620002365760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20736c617368696e672065786365656473203130302500000060448201526064016200008d565b82518051600d805460208085015160408087015160609788015160ff9081166401000000000260ff60201b1961ffff90931662010000029290921664ffffff0000199482166101000261ffff1990971698821698909817959095179290921695909517178355808801518051600e90815591810151600f5593840151601080549190931660ff19919091161790915592820151869391929190601190620002de908262000691565b50608091909101516004909101805460ff191660ff909216919091179055506200078f9350505050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000343576200034362000308565b60405290565b604080519081016001600160401b038111828210171562000343576200034362000308565b604051608081016001600160401b038111828210171562000343576200034362000308565b604051601f8201601f191681016001600160401b0381118282101715620003be57620003be62000308565b604052919050565b805160ff81168114620003d857600080fd5b919050565b600060a08284031215620003f057600080fd5b620003fa6200031e565b905081518152602080830151818301526200041860408401620003c6565b604083015260608301516001600160401b03808211156200043857600080fd5b818501915085601f8301126200044d57600080fd5b81518181111562000462576200046262000308565b62000476601f8201601f1916850162000393565b915080825286848285010111156200048d57600080fd5b60005b81811015620004ad57838101850151838201860152840162000490565b50600084828401015250806060850152505050620004ce60808301620003c6565b608082015292915050565b80516001600160a01b0381168114620003d857600080fd5b6000806000606084860312156200050757600080fd5b83516001600160401b03808211156200051f57600080fd5b9085019081870360a08112156200053557600080fd5b6200053f62000349565b60808212156200054e57600080fd5b620005586200036e565b91506200056584620003c6565b82526200057560208501620003c6565b6020830152604084015161ffff811681146200059057600080fd5b6040830152620005a360608501620003c6565b606083015290815260808301519082821115620005bf57600080fd5b620005cd89838601620003dd565b602082015280965050505050620005e760208501620004d9565b9150620005f760408501620004d9565b90509250925092565b600181811c908216806200061557607f821691505b6020821081036200063657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200068c576000816000526020600020601f850160051c81016020861015620006675750805b601f850160051c820191505b81811015620006885782815560010162000673565b5050505b505050565b81516001600160401b03811115620006ad57620006ad62000308565b620006c581620006be845462000600565b846200063c565b602080601f831160018114620006fd5760008415620006e45750858301515b600019600386901b1c1916600185901b17855562000688565b600085815260208120601f198616915b828110156200072e578886015182559484019460019091019084016200070d565b50858210156200074d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff81811683821602908116908181146200078857634e487b7160e01b600052601160045260246000fd5b5092915050565b60805160a051613909620007e6600039600081816104060152818161167c0152818161203a015281816120d90152818161224e015281816122ed015261250f0152600081816129c60152612b3d01526139096000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80639777b72c116100e3578063c0cc4add1161008c578063f752196b11610066578063f752196b146103c4578063fb1e61ca146103e4578063fc0c546a1461040457600080fd5b8063c0cc4add1461038b578063c5d433511461039e578063e8aa0a07146103b157600080fd5b8063a6af384b116100bd578063a6af384b14610338578063b396dc791461034b578063be5cdc481461036b57600080fd5b80639777b72c146102fa578063a29c29a414610302578063a3a0807e1461031557600080fd5b80634641dce6116101455780636b00c8cf1161011f5780636b00c8cf1461028e5780636e2b54ee146102d257806379502c55146102e557600080fd5b80634641dce61461024157806359cc89ed146102665780635da738351461027957600080fd5b80630aefaabe116101765780630aefaabe146101f8578063329b5a0b1461020b578063458d2bf11461022e57600080fd5b806302fa8e651461019d57806305b90773146101c357806308695fcd146101e3575b600080fd5b6101b06101ab366004612d73565b61042a565b6040519081526020015b60405180910390f35b6101d66101d1366004612d73565b6104a1565b6040516101ba9190612da2565b6101f66101f1366004612dbc565b6105b3565b005b6101f6610206366004612df3565b610709565b6101b0610219366004612d73565b60009081526014602052604090206005015490565b6101b061023c366004612d73565b6108e6565b61025461024f366004612d73565b6108ff565b60405160ff90911681526020016101ba565b6101f6610274366004612e48565b610912565b610281610c16565b6040516101ba9190612e7f565b6102ba61029c366004612d73565b6000908152601560205260409020600501546001600160a01b031690565b6040516001600160a01b0390911681526020016101ba565b6101f66102e0366004612d73565b610c3d565b6102ed610c4a565b6040516101ba9190612f09565b610281610dd3565b6101f6610310366004612d73565b610df2565b610328610323366004612d73565b610e62565b60405190151581526020016101ba565b6101f6610346366004612fa4565b610e97565b61035e610359366004612d73565b6111ec565b6040516101ba91906130ad565b61037e610379366004612d73565b6113d5565b6040516101ba91906130df565b610328610399366004612d73565b6114a3565b6101f66103ac3660046130f3565b6114b6565b6101f66103bf366004613123565b6116f5565b6101b06103d2366004612d73565b60009081526008602052604090205490565b6103f76103f2366004612d73565b61182a565b6040516101ba9190613151565b7f00000000000000000000000000000000000000000000000000000000000000006102ba565b60008181526014602052604081206004015481610446846104a1565b9050600081600481111561045c5761045c612d8c565b14806104795750600181600481111561047757610477612d8c565b145b15610485575092915050565b6104998261049460014261317a565b6119e1565b949350505050565b60008181526013602052604081205482906001600160a01b03166104fe5760405162461bcd60e51b815260206004820152600f60248201526e155b9adb9bdddb881c995c5d595cdd608a1b60448201526064015b60405180910390fd5b600083815260146020526040812090815460ff16600481111561052357610523612d8c565b148015610540575060008481526014602052604090206005015442115b1561054f5760029250506105ad565b6001815460ff16600481111561056757610567612d8c565b148061058857506000815460ff16600481111561058657610586612d8c565b145b80156105975750806004015442115b156105a65760039250506105ad565b5460ff1691505b50919050565b60016105be836113d5565b60058111156105cf576105cf612d8c565b1461061c5760405162461bcd60e51b815260206004820152601960248201527f536c6f74206e6f7420616363657074696e672070726f6f66730000000000000060448201526064016104f5565b61062682826119f9565b6000828152601560209081526040808320600181015484526013909252909120600d5461ffff620100009091041661066a8560009081526008602052604090205490565b61067491906131a3565b60000361070357600d54600682015460009160649161069e91640100000000900460ff16906131b7565b6106a891906131ce565b9050808360040160008282546106be919061317a565b9091555050600d54600086815260086020526040902054610100820460ff169162010000900461ffff16906106f391906131ce565b106107015761070185611c26565b505b50505050565b826000808281526015602052604090205460ff16600581111561072e5761072e612d8c565b0361076a5760405162461bcd60e51b815260206004820152600c60248201526b536c6f74206973206672656560a01b60448201526064016104f5565b600084815260156020526040902060058101546001600160a01b031633146107d45760405162461bcd60e51b815260206004820152601960248201527f536c6f742066696c6c6564206279206f7468657220686f73740000000000000060448201526064016104f5565b60006107df866113d5565b905060048160058111156107f5576107f5612d8c565b036108425760405162461bcd60e51b815260206004820152600c60248201527f416c72656164792070616964000000000000000000000000000000000000000060448201526064016104f5565b600281600581111561085657610856612d8c565b036108705761086b8260010154878787611dcc565b6108de565b600581600581111561088457610884612d8c565b036108995761086b826001015487878761215e565b60038160058111156108ad576108ad612d8c565b036108bc5761086b3387612370565b60018160058111156108d0576108d0612d8c565b036108de576108de86611c26565b505050505050565b60006108f9826108f4612397565b6123a2565b92915050565b60006108f98261090d612397565b6123b6565b60008381526013602052604090205483906001600160a01b031661096a5760405162461bcd60e51b815260206004820152600f60248201526e155b9adb9bdddb881c995c5d595cdd608a1b60448201526064016104f5565b6000848152601360205260409020600181015467ffffffffffffffff1684106109d55760405162461bcd60e51b815260206004820152600c60248201527f496e76616c696420736c6f74000000000000000000000000000000000000000060448201526064016104f5565b6040805160208082018890528183018790528251808303840181526060909201909252805191012060009060008181526015602052604081206001810189905560038101889055919250610a28836113d5565b6005811115610a3957610a39612d8c565b14610a865760405162461bcd60e51b815260206004820152601060248201527f536c6f74206973206e6f7420667265650000000000000000000000000000000060448201526064016104f5565b600483015460008381526006602090815260408083204290556007909152902055610ab182866116f5565b60058101805473ffffffffffffffffffffffffffffffffffffffff191633179055805460ff191660019081178255426002830155600088815260146020526040812080830180549193929091610b089084906131e2565b90915550610b189050884261242a565b816002016000828254610b2b919061317a565b90915550506006840154610b3f33826124c7565b8060166000016000828254610b5491906131e2565b9091555050600483018190556005830154610b78906001600160a01b0316856125ca565b887ff530852268993f91008f1a1e0b09b5c813acd4188481f1fa83c33c7182e814b489604051610baa91815260200190565b60405180910390a26001808601549083015467ffffffffffffffff9091169003610c0b57815460ff1916600117825542600383015560405189907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a25b505050505050505050565b336000908152600c60205260409020606090610c3890610c35906125ec565b90565b905090565b610c4781336114b6565b50565b610ca86040805160c0810182526000918101828152606082018390526080820183905260a082019290925290819081526040805160a08101825260008082526020828101829052928201819052606080830152608082015291015290565b6040805160c081018252600d805460ff8082168486019081526101008304821660608087019190915261ffff620100008504166080870152640100000000909304821660a08087019190915290855285519081018652600e80548252600f54602083810191909152601054909316968201969096526011805495969495928701949193919291840191610d3a906131f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d66906131f5565b8015610db35780601f10610d8857610100808354040283529160200191610db3565b820191906000526020600020905b815481529060010190602001808311610d9657829003601f168201915b50505091835250506004919091015460ff16602090910152905250919050565b336000908152600b60205260409020606090610c3890610c35906125ec565b806000808281526015602052604090205460ff166005811115610e1757610e17612d8c565b03610e535760405162461bcd60e51b815260206004820152600c60248201526b536c6f74206973206672656560a01b60448201526064016104f5565b610e5e823333610709565b5050565b6000806000610e7884610e73612397565b6125f9565b9092509050818015610499575060025460ff9081169116109392505050565b33610ea56020830183613229565b6001600160a01b031614610efb5760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420636c69656e7420616464726573730000000000000000000060448201526064016104f5565b6000610f0e610f09836133bb565b6126dc565b6000818152601360205260409020549091506001600160a01b031615610f765760405162461bcd60e51b815260206004820152601660248201527f5265717565737420616c7265616479206578697374730000000000000000000060448201526064016104f5565b6000826101200135118015610f9357506060820135610120830135105b610fdf5760405162461bcd60e51b815260206004820152601360248201527f457870697279206e6f7420696e2072616e67650000000000000000000000000060448201526064016104f5565b6000610ff160408401602085016134aa565b67ffffffffffffffff16116110485760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420736c6f7473000000000000000000000000000060448201526064016104f5565b61105860408301602084016134aa565b67ffffffffffffffff16611073610100840160e085016134aa565b67ffffffffffffffff1611156110cb5760405162461bcd60e51b815260206004820152601960248201527f6d6178536c6f744c6f7373206578636565647320736c6f74730000000000000060448201526064016104f5565b600081815260136020526040902082906110e58282613635565b506110f690506060830135426131e2565b600082815260146020526040902060040155611117610120830135426131e2565b6000828152601460209081526040909120600501919091556111459061113f90840184613229565b8261270c565b6000611158611153846133bb565b61272e565b60008381526014602052604081206002018290556016805492935083929091906111839084906131e2565b90915550611193905033826124c7565b7f5fdb86c365a247a4d97dcbcc5c3abde9d6e3e2de26273f3fda8eef5073b9a96c828460200160146000868152602001908152602001600020600501546040516111df9392919061372d565b60405180910390a1505050565b6111f4612cab565b816000808281526015602052604090205460ff16600581111561121957611219612d8c565b036112555760405162461bcd60e51b815260206004820152600c60248201526b536c6f74206973206672656560a01b60448201526064016104f5565b600083815260156020526040902061126b612cab565b600180830154600090815260136020908152604091829020825160a0808201855282546001600160a01b03168252845160e0810186529583015467ffffffffffffffff9081168752600284015487860152600384015487870152600484015460608801526005840154608088015260068401549187019190915260078301541660c0860152918201939093528151808301835260088401805492949385019282908290611317906131f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611343906131f5565b80156113905780601f1061136557610100808354040283529160200191611390565b820191906000526020600020905b81548152906001019060200180831161137357829003601f168201915b505050918352505060019190910154602091820152908252600a83015482820152600b9092015460409091015290825260039092015491810191909152915050919050565b6000818152601560205260408120600181015482036113f75750600092915050565b600061140682600101546104a1565b90506004825460ff16600581111561142057611420612d8c565b0361142f575060049392505050565b600281600481111561144357611443612d8c565b03611452575060059392505050565b600381600481111561146657611466612d8c565b03611475575060029392505050565b600481600481111561148957611489612d8c565b03611498575060039392505050565b505460ff1692915050565b60006108f9826114b1612397565b612753565b600082815260136020908152604080832060149092529091206005015442116115215760405162461bcd60e51b815260206004820152601960248201527f52657175657374206e6f74207965742074696d6564206f75740000000000000060448201526064016104f5565b80546001600160a01b0316331461157a5760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420636c69656e7420616464726573730000000000000000000060448201526064016104f5565b600083815260146020526040812090815460ff16600481111561159f5761159f612d8c565b146115ec5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642073746174650000000000000000000000000000000000000060448201526064016104f5565b805460ff19166002178155815461160c906001600160a01b031685612786565b60405184907ff903f4774c7bd27355f9d7fcbc382b079b164a697a44ac5d95267a4c3cb3bb2290600090a26002810154601780548291906000906116519084906131e2565b909155505060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156116c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e991906137a9565b610701576107016137cb565b6000828152601560209081526040808320600101548084526013909252909120546001600160a01b031661175d5760405162461bcd60e51b815260206004820152600f60248201526e155b9adb9bdddb881c995c5d595cdd608a1b60448201526064016104f5565b6000838152601560209081526040808320600181015484526013835281842082516003808252608082019094529194909390929082016060803683370190505090506117b06117ab876108e6565b6127a8565b816000815181106117c3576117c36137e1565b602090810291909101015260098201546117dc906127b9565b816001815181106117ef576117ef6137e1565b602002602001018181525050826003015481600281518110611813576118136137e1565b6020026020010181815250506108de8686836127c5565b611832612ccb565b60008281526013602052604090205482906001600160a01b031661188a5760405162461bcd60e51b815260206004820152600f60248201526e155b9adb9bdddb881c995c5d595cdd608a1b60448201526064016104f5565b600083815260136020908152604091829020825160a0808201855282546001600160a01b03168252845160e081018652600184015467ffffffffffffffff90811682526002850154828701526003850154828801526004850154606083015260058501546080830152600685015492820192909252600784015490911660c08201529281019290925282518084018452600882018054939492939285019282908290611935906131f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611961906131f5565b80156119ae5780601f10611983576101008083540402835291602001916119ae565b820191906000526020600020905b81548152906001019060200180831161199157829003601f168201915b505050505081526020016001820154815250508152602001600a8201548152602001600b82015481525050915050919050565b60008183106119f057816119f2565b825b9392505050565b6000611a0482612984565b9050428110611a555760405162461bcd60e51b815260206004820152601860248201527f506572696f6420686173206e6f7420656e64656420796574000000000000000060448201526064016104f5565b600154611a6290826131e2565b4210611ab05760405162461bcd60e51b815260206004820152601460248201527f56616c69646174696f6e2074696d6564206f757400000000000000000000000060448201526064016104f5565b600083815260096020908152604080832085845290915290205460ff1615611b1a5760405162461bcd60e51b815260206004820181905260248201527f50726f6f6620776173207375626d69747465642c206e6f74206d697373696e6760448201526064016104f5565b611b248383612753565b611b705760405162461bcd60e51b815260206004820152601660248201527f50726f6f6620776173206e6f742072657175697265640000000000000000000060448201526064016104f5565b6000838152600a6020908152604080832085845290915290205460ff1615611bda5760405162461bcd60e51b815260206004820152601f60248201527f50726f6f6620616c7265616479206d61726b6564206173206d697373696e670060448201526064016104f5565b6000838152600a602090815260408083208584528252808320805460ff1916600190811790915586845260089092528220805491929091611c1c9084906131e2565b9091555050505050565b60008181526015602090815260408083206001810154808552601490935292206005830154611c5e906001600160a01b031685612370565b6003808401546000868152601560205260408120805460ff1916815560018082018390556002820183905593810182905560048101829055600501805473ffffffffffffffffffffffffffffffffffffffff191690558383018054929392909190611cca90849061317a565b909155505060405181815283907f1d31c9f8dea6e179f6a050db117595feea8937029ea51f5168a4780be7e8f5529060200160405180910390a2600085815260086020526040812055600083815260136020526040812060018085015490820154919291611d42919067ffffffffffffffff1661317a565b600783015490915067ffffffffffffffff1681118015611d7757506001845460ff166004811115611d7557611d75612d8c565b145b15611dc357835460ff19166004178455611d9260014261317a565b600485015560405185907f4769361a442504ecaf038f35e119bcccdd5e42096b24c09e3c17fd17c6684c0290600090a25b50505050505050565b60008481526013602052604090205484906001600160a01b0316611e245760405162461bcd60e51b815260206004820152600f60248201526e155b9adb9bdddb881c995c5d595cdd608a1b60448201526064016104f5565b60008581526014602090815260408083206013909252909120815460ff191660031782558054611e5d906001600160a01b031688612786565b60008681526015602052604090206005810154611e83906001600160a01b031688612370565b6000888152601360209081526040808320815160a0808201845282546001600160a01b03168252835160e081018552600184015467ffffffffffffffff90811682526002850154828801526003850154828701526004850154606083015260058501546080830152600685015492820192909252600784015490911660c08201529381019390935281518083018352600882018054611fd89594850192919082908290611f2f906131f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5b906131f5565b8015611fa85780601f10611f7d57610100808354040283529160200191611fa8565b820191906000526020600020905b815481529060010190602001808311611f8b57829003601f168201915b505050505081526020016001820154815250508152602001600a8201548152602001600b82015481525050612997565b6004830154909150611fea81836131e2565b60178054600090611ffc9084906131e2565b90915550508254600490849060ff1916600183021790555060405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a791906137a9565b6120b3576120b36137cb565b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214691906137a9565b612152576121526137cb565b50505050505050505050565b60008481526013602052604090205484906001600160a01b03166121b65760405162461bcd60e51b815260206004820152600f60248201526e155b9adb9bdddb881c995c5d595cdd608a1b60448201526064016104f5565b600084815260156020526040902060058101546121dc906001600160a01b031686612370565b60006121ec87836002015461242a565b60048301549091506121fe81836131e2565b601780546000906122109084906131e2565b90915550508254600490849060ff1916600183021790555060405163a9059cbb60e01b81526001600160a01b038781166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122bb91906137a9565b6122c7576122c76137cb565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061235a91906137a9565b612366576123666137cb565b5050505050505050565b6001600160a01b0382166000908152600c6020526040902061239290826129b3565b505050565b6000610c38426129bf565b60006119f26123b184846123b6565b6129eb565b6000806123c5610100436131a3565b600454909150600090610100906123df9060ff16866131b7565b6123e991906131a3565b905060006123f9610100876131a3565b905060006101008261240b85876131e2565b61241591906131e2565b61241f91906131a3565b979650505050505050565b6000828152601360209081526040808320601490925282206005015483106124945760405162461bcd60e51b815260206004820152601760248201527f5374617274206e6f74206265666f72652065787069727900000000000000000060448201526064016104f5565b6005810154836124b38660009081526014602052604090206005015490565b6124bd919061317a565b61049991906131b7565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830181905260448301849052917f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af115801561255a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257e91906137a9565b6123925760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016104f5565b6001600160a01b0382166000908152600c602052604090206123929082612a45565b606060006119f283612a51565b6000806000612607856113d5565b60008681526006602052604081205491925090612623906129bf565b9050600182600581111561263957612639612d8c565b14158061264d575061264b8582612aad565b155b15612660576000809350935050506126d5565b61266a86866123b6565b92506000612677846129eb565b600254909150600090610100906126919060ff16826137f7565b60008a8152600760205260409020546126ae9161ffff16906131b7565b6126b891906131ce565b90508015806126ce57506126cc81836131a3565b155b9550505050505b9250929050565b6000816040516020016126ef9190613151565b604051602081830303815290604052805190602001209050919050565b6001600160a01b0382166000908152600b602052604090206123929082612a45565b600061273982612997565b6020830151516108f9919067ffffffffffffffff166131b7565b600080600061276285856125f9565b909250905081801561277d575060025460ff90811690821610155b95945050505050565b6001600160a01b0382166000908152600b6020526040902061239290826129b3565b600060ff1982168161049982612ab7565b6000806119f283612ab7565b6000838152600960205260408120906127dc612397565b815260208101919091526040016000205460ff161561283d5760405162461bcd60e51b815260206004820152601760248201527f50726f6f6620616c7265616479207375626d697474656400000000000000000060448201526064016104f5565b6005546040517f94c8919d0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906394c8919d906128889085908590600401613812565b602060405180830381865afa1580156128a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128c991906137a9565b6129155760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016104f5565b600083815260096020526040812060019161292e612397565b815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3b989d183b84b02259d7c14b34a9c9eb0fccb4c355a920d25e581e25aef4993d836040516111df91815260200190565b60006108f961299283612b29565b612b36565b602081015160808101516040909101516000916108f9916131b7565b60006119f28383612b62565b60006108f97f0000000000000000000000000000000000000000000000000000000000000000836131ce565b60008060ff83166129fd60014361317a565b612a07919061317a565b4090506000819003612a1b57612a1b6137cb565b60408051602081018390520160405160208183030381529060405280519060200120915050919050565b60006119f28383612c5c565b606081600001805480602002602001604051908101604052809291908181526020018280548015612aa157602002820191906000526020600020905b815481526020019060010190808311612a8d575b50505050509050919050565b60008183116119f2565b7fff00000000000000000000000000000000000000000000000000000000000000811660015b60208110156105ad57600891821c91612af79082906131b7565b83901b7fff00000000000000000000000000000000000000000000000000000000000000169190911790600101612add565b60006108f98260016131e2565b60006108f97f0000000000000000000000000000000000000000000000000000000000000000836131b7565b60008181526001830160205260408120548015612c4b576000612b8660018361317a565b8554909150600090612b9a9060019061317a565b9050818114612bff576000866000018281548110612bba57612bba6137e1565b9060005260206000200154905080876000018481548110612bdd57612bdd6137e1565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612c1057612c106138bd565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108f9565b60009150506108f9565b5092915050565b6000818152600183016020526040812054612ca3575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108f9565b5060006108f9565b6040518060400160405280612cbe612ccb565b8152602001600081525090565b6040518060a0016040528060006001600160a01b03168152602001612d3a6040518060e00160405280600067ffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600067ffffffffffffffff1681525090565b8152602001612d5f604051806040016040528060608152602001600080191681525090565b815260006020820181905260409091015290565b600060208284031215612d8557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6020810160058310612db657612db6612d8c565b91905290565b60008060408385031215612dcf57600080fd5b50508035926020909101359150565b6001600160a01b0381168114610c4757600080fd5b600080600060608486031215612e0857600080fd5b833592506020840135612e1a81612dde565b91506040840135612e2a81612dde565b809150509250925092565b600061010082840312156105ad57600080fd5b60008060006101408486031215612e5e57600080fd5b8335925060208401359150612e768560408601612e35565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612eb757835183529284019291840191600101612e9b565b50909695505050505050565b6000815180845260005b81811015612ee957602081850181015186830182015201612ecd565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000825160ff815116602084015260ff602082015116604084015261ffff604082015116606084015260ff606082015116608084015250602083015160a080840152805160c0840152602081015160e084015260ff604082015116610100840152606081015160a0610120850152612f89610160850182612ec3565b905060ff608083015116610140850152809250505092915050565b600060208284031215612fb657600080fd5b813567ffffffffffffffff811115612fcd57600080fd5b820161016081850312156119f257600080fd5b6000815160408452612ff56040850182612ec3565b602093840151949093019390935250919050565b60006101606001600160a01b038351168452602083015167ffffffffffffffff808251166020870152602082015160408701526040820151606087015260608201516080870152608082015160a087015260a082015160c08701528060c08301511660e0870152505060408301518161010086015261308a82860182612fe0565b915050606083015161012085015260808301516101408501528091505092915050565b6020815260008251604060208401526130c96060840182613009565b9050602084015160408401528091505092915050565b6020810160068310612db657612db6612d8c565b6000806040838503121561310657600080fd5b82359150602083013561311881612dde565b809150509250929050565b600080610120838503121561313757600080fd5b823591506131488460208501612e35565b90509250929050565b6020815260006119f26020830184613009565b634e487b7160e01b600052601160045260246000fd5b818103818111156108f9576108f9613164565b634e487b7160e01b600052601260045260246000fd5b6000826131b2576131b261318d565b500690565b80820281158282048414176108f9576108f9613164565b6000826131dd576131dd61318d565b500490565b808201808211156108f9576108f9613164565b600181811c9082168061320957607f821691505b6020821081036105ad57634e487b7160e01b600052602260045260246000fd5b60006020828403121561323b57600080fd5b81356119f281612dde565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561327f5761327f613246565b60405290565b60405160a0810167ffffffffffffffff8111828210171561327f5761327f613246565b60405160e0810167ffffffffffffffff8111828210171561327f5761327f613246565b604051601f8201601f1916810167ffffffffffffffff811182821017156132f4576132f4613246565b604052919050565b67ffffffffffffffff81168114610c4757600080fd5b60006040828403121561332457600080fd5b61332c61325c565b9050813567ffffffffffffffff8082111561334657600080fd5b818401915084601f83011261335a57600080fd5b813560208282111561336e5761336e613246565b613380601f8301601f191682016132cb565b9250818352868183860101111561339657600080fd5b8181850182850137600081838501015282855280860135818601525050505092915050565b60008136036101608112156133cf57600080fd5b6133d7613285565b83356133e281612dde565b815260e0601f19830112156133f657600080fd5b6133fe6132a8565b9150602084013561340e816132fc565b8083525060408401356020830152606084013560408301526080840135606083015260a0840135608083015260c084013560a083015260e0840135613452816132fc565b60c083015260208101919091526101008301359067ffffffffffffffff82111561347b57600080fd5b61348736838601613312565b604082015261012084013560608201526101409093013560808401525090919050565b6000602082840312156134bc57600080fd5b81356119f2816132fc565b600081356108f9816132fc565b60008235603e198336030181126134ea57600080fd5b9190910192915050565b601f821115612392576000816000526020600020601f850160051c8101602086101561351d5750805b601f850160051c820191505b818110156108de57828155600101613529565b8135601e1983360301811261355057600080fd5b8201803567ffffffffffffffff81111561356957600080fd5b6020813603818401131561357c57600080fd5b6135908261358a86546131f5565b866134f4565b6000601f8311600181146135c657600084156135ae57508482018301355b600019600386901b1c1916600185901b178655613623565b600086815260209020601f19851690835b828110156135f85787850186013582559385019360019091019085016135d7565b50858210156136175760001960f88760031b161c198585890101351681555b505060018460011b0186555b50508085013560018501555050505050565b813561364081612dde565b6001600160a01b03811673ffffffffffffffffffffffffffffffffffffffff19835416178255506020820135613675816132fc565b60018201805467ffffffffffffffff191667ffffffffffffffff83161790555060408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556136f96136d660e084016134c7565b6007830167ffffffffffffffff821667ffffffffffffffff198254161781555050565b61371361370a6101008401846134d4565b6008830161353c565b610120820135600a820155610140820135600b8201555050565b83815261012081018335613740816132fc565b67ffffffffffffffff8082166020850152602086013560408501526040860135606085015260608601356080850152608086013560a085015260a086013560c085015260c08601359150613793826132fc565b1660e08301526101009091019190915292915050565b6000602082840312156137bb57600080fd5b815180151581146119f257600080fd5b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b61ffff828116828216039080821115612c5557612c55613164565b82358152602080840135908201526000610120828101613842604085016040880180358252602090810135910152565b61385c608085016080880180358252602090810135910152565b61387660c0850160c0880180358252602090810135910152565b61010084019190915283519081905261014083019060209081860160005b828110156138b057815185529383019390830190600101613894565b5092979650505050505050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122015a141e4ecbbd0c6915752ab63ac2324215c9e96212cb8d31d2fe04dcc8546af64736f6c63430008170033";
        public MarketplaceDeploymentBase() : base(BYTECODE) { }
        public MarketplaceDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("tuple", "configuration", 1)]
        public virtual MarketplaceConfig Configuration { get; set; }
        [Parameter("address", "token_", 2)]
        public virtual string Token { get; set; }
        [Parameter("address", "verifier", 3)]
        public virtual string Verifier { get; set; }
    }
    public partial class ProofSubmittedEventDTO : ProofSubmittedEventDTOBase { }

    [Event("ProofSubmitted")]
    public class ProofSubmittedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "id", 1, false )]
        public virtual byte[] Id { get; set; }
    }
    public partial class RequestCancelledEventDTO : RequestCancelledEventDTOBase { }

    [Event("RequestCancelled")]
    public class RequestCancelledEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "requestId", 1, true )]
        public virtual byte[] RequestId { get; set; }
    }
    public partial class RequestFailedEventDTO : RequestFailedEventDTOBase { }

    [Event("RequestFailed")]
    public class RequestFailedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "requestId", 1, true )]
        public virtual byte[] RequestId { get; set; }
    }
    public partial class RequestFulfilledEventDTO : RequestFulfilledEventDTOBase { }

    [Event("RequestFulfilled")]
    public class RequestFulfilledEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "requestId", 1, true )]
        public virtual byte[] RequestId { get; set; }
    }
    public partial class SlotFilledEventDTO : SlotFilledEventDTOBase { }

    [Event("SlotFilled")]
    public class SlotFilledEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "requestId", 1, true )]
        public virtual byte[] RequestId { get; set; }
        [Parameter("uint256", "slotIndex", 2, false )]
        public virtual BigInteger SlotIndex { get; set; }
    }
    public partial class SlotFreedEventDTO : SlotFreedEventDTOBase { }

    [Event("SlotFreed")]
    public class SlotFreedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "requestId", 1, true )]
        public virtual byte[] RequestId { get; set; }
        [Parameter("uint256", "slotIndex", 2, false )]
        public virtual BigInteger SlotIndex { get; set; }
    }
    public partial class StorageRequestedEventDTO : StorageRequestedEventDTOBase { }

    [Event("StorageRequested")]
    public class StorageRequestedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "requestId", 1, false )]
        public virtual byte[] RequestId { get; set; }
        [Parameter("tuple", "ask", 2, false )]
        public virtual Ask Ask { get; set; }
        [Parameter("uint256", "expiry", 3, false )]
        public virtual BigInteger Expiry { get; set; }
    }
    public partial class ConfigOutputDTO : ConfigOutputDTOBase { }

    [FunctionOutput]
    public class ConfigOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual MarketplaceConfig ReturnValue1 { get; set; }
    }
    public partial class ConfigFunction : ConfigFunctionBase { }

    [Function("config", typeof(ConfigOutputDTO))]
    public class ConfigFunctionBase : FunctionMessage
    {

    }

    public partial class FillSlotFunction : FillSlotFunctionBase { }

    [Function("fillSlot")]
    public class FillSlotFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
        [Parameter("uint256", "slotIndex", 2)]
        public virtual BigInteger SlotIndex { get; set; }
        [Parameter("tuple", "proof", 3)]
        public virtual Groth16Proof Proof { get; set; }
    }

    public partial class FreeSlot1Function : FreeSlot1FunctionBase { }

    [Function("freeSlot")]
    public class FreeSlot1FunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
        [Parameter("address", "rewardRecipient", 2)]
        public virtual string RewardRecipient { get; set; }
        [Parameter("address", "collateralRecipient", 3)]
        public virtual string CollateralRecipient { get; set; }
    }

    public partial class FreeSlotFunction : FreeSlotFunctionBase { }

    [Function("freeSlot")]
    public class FreeSlotFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
    }
    public partial class GetActiveSlotOutputDTO : GetActiveSlotOutputDTOBase { }

    [FunctionOutput]
    public class GetActiveSlotOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual ActiveSlot ReturnValue1 { get; set; }
    }
    public partial class GetActiveSlotFunction : GetActiveSlotFunctionBase { }

    [Function("getActiveSlot", typeof(GetActiveSlotOutputDTO))]
    public class GetActiveSlotFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
    }
    public partial class GetChallengeOutputDTO : GetChallengeOutputDTOBase { }

    [FunctionOutput]
    public class GetChallengeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }
    public partial class GetChallengeFunction : GetChallengeFunctionBase { }

    [Function("getChallenge", "bytes32")]
    public class GetChallengeFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "id", 1)]
        public virtual byte[] Id { get; set; }
    }
    public partial class GetHostOutputDTO : GetHostOutputDTOBase { }

    [FunctionOutput]
    public class GetHostOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }
    public partial class GetHostFunction : GetHostFunctionBase { }

    [Function("getHost", "address")]
    public class GetHostFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
    }
    public partial class GetPointerOutputDTO : GetPointerOutputDTOBase { }

    [FunctionOutput]
    public class GetPointerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
    public partial class GetPointerFunction : GetPointerFunctionBase { }

    [Function("getPointer", "uint8")]
    public class GetPointerFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "id", 1)]
        public virtual byte[] Id { get; set; }
    }
    public partial class GetRequestOutputDTO : GetRequestOutputDTOBase { }

    [FunctionOutput]
    public class GetRequestOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual Request ReturnValue1 { get; set; }
    }
    public partial class GetRequestFunction : GetRequestFunctionBase { }

    [Function("getRequest", typeof(GetRequestOutputDTO))]
    public class GetRequestFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
    }
    public partial class IsProofRequiredOutputDTO : IsProofRequiredOutputDTOBase { }

    [FunctionOutput]
    public class IsProofRequiredOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }
    public partial class IsProofRequiredFunction : IsProofRequiredFunctionBase { }

    [Function("isProofRequired", "bool")]
    public class IsProofRequiredFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "id", 1)]
        public virtual byte[] Id { get; set; }
    }

    public partial class MarkProofAsMissingFunction : MarkProofAsMissingFunctionBase { }

    [Function("markProofAsMissing")]
    public class MarkProofAsMissingFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
        [Parameter("uint256", "period", 2)]
        public virtual BigInteger Period { get; set; }
    }
    public partial class MissingProofsOutputDTO : MissingProofsOutputDTOBase { }

    [FunctionOutput]
    public class MissingProofsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }
    public partial class MissingProofsFunction : MissingProofsFunctionBase { }

    [Function("missingProofs", "uint256")]
    public class MissingProofsFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
    }
    public partial class MyRequestsOutputDTO : MyRequestsOutputDTOBase { }

    [FunctionOutput]
    public class MyRequestsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32[]", "", 1)]
        public virtual List<byte[]> ReturnValue1 { get; set; }
    }
    public partial class MyRequestsFunction : MyRequestsFunctionBase { }

    [Function("myRequests", "bytes32[]")]
    public class MyRequestsFunctionBase : FunctionMessage
    {

    }
    public partial class MySlotsOutputDTO : MySlotsOutputDTOBase { }

    [FunctionOutput]
    public class MySlotsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32[]", "", 1)]
        public virtual List<byte[]> ReturnValue1 { get; set; }
    }
    public partial class MySlotsFunction : MySlotsFunctionBase { }

    [Function("mySlots", "bytes32[]")]
    public class MySlotsFunctionBase : FunctionMessage
    {

    }
    public partial class RequestEndOutputDTO : RequestEndOutputDTOBase { }

    [FunctionOutput]
    public class RequestEndOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }
    public partial class RequestEndFunction : RequestEndFunctionBase { }

    [Function("requestEnd", "uint256")]
    public class RequestEndFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
    }
    public partial class RequestExpiryOutputDTO : RequestExpiryOutputDTOBase { }

    [FunctionOutput]
    public class RequestExpiryOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }
    public partial class RequestExpiryFunction : RequestExpiryFunctionBase { }

    [Function("requestExpiry", "uint256")]
    public class RequestExpiryFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
    }
    public partial class RequestStateOutputDTO : RequestStateOutputDTOBase { }

    [FunctionOutput]
    public class RequestStateOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
    public partial class RequestStateFunction : RequestStateFunctionBase { }

    [Function("requestState", "uint8")]
    public class RequestStateFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
    }

    public partial class RequestStorageFunction : RequestStorageFunctionBase { }

    [Function("requestStorage")]
    public class RequestStorageFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "request", 1)]
        public virtual Request Request { get; set; }
    }
    public partial class SlotStateOutputDTO : SlotStateOutputDTOBase { }

    [FunctionOutput]
    public class SlotStateOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
    public partial class SlotStateFunction : SlotStateFunctionBase { }

    [Function("slotState", "uint8")]
    public class SlotStateFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "slotId", 1)]
        public virtual byte[] SlotId { get; set; }
    }

    public partial class SubmitProofFunction : SubmitProofFunctionBase { }

    [Function("submitProof")]
    public class SubmitProofFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "id", 1)]
        public virtual byte[] Id { get; set; }
        [Parameter("tuple", "proof", 2)]
        public virtual Groth16Proof Proof { get; set; }
    }
    public partial class TokenOutputDTO : TokenOutputDTOBase { }

    [FunctionOutput]
    public class TokenOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }
    public partial class TokenFunction : TokenFunctionBase { }

    [Function("token", "address")]
    public class TokenFunctionBase : FunctionMessage
    {

    }
    public partial class WillProofBeRequiredOutputDTO : WillProofBeRequiredOutputDTOBase { }

    [FunctionOutput]
    public class WillProofBeRequiredOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }
    public partial class WillProofBeRequiredFunction : WillProofBeRequiredFunctionBase { }

    [Function("willProofBeRequired", "bool")]
    public class WillProofBeRequiredFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "id", 1)]
        public virtual byte[] Id { get; set; }
    }

    public partial class WithdrawFundsFunction : WithdrawFundsFunctionBase { }

    [Function("withdrawFunds")]
    public class WithdrawFundsFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
    }

    public partial class WithdrawFunds1Function : WithdrawFunds1FunctionBase { }

    [Function("withdrawFunds")]
    public class WithdrawFunds1FunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "requestId", 1)]
        public virtual byte[] RequestId { get; set; }
        [Parameter("address", "withdrawRecipient", 2)]
        public virtual string WithdrawRecipient { get; set; }
    }
    public partial class CollateralConfig : CollateralConfigBase { }

    public class CollateralConfigBase 
    {
        [Parameter("uint8", "repairRewardPercentage", 1)]
        public virtual byte RepairRewardPercentage { get; set; }
        [Parameter("uint8", "maxNumberOfSlashes", 2)]
        public virtual byte MaxNumberOfSlashes { get; set; }
        [Parameter("uint16", "slashCriterion", 3)]
        public virtual ushort SlashCriterion { get; set; }
        [Parameter("uint8", "slashPercentage", 4)]
        public virtual byte SlashPercentage { get; set; }
    }
    public partial class ProofConfig : ProofConfigBase { }

    public class ProofConfigBase 
    {
        [Parameter("uint256", "period", 1)]
        public virtual BigInteger Period { get; set; }
        [Parameter("uint256", "timeout", 2)]
        public virtual BigInteger Timeout { get; set; }
        [Parameter("uint8", "downtime", 3)]
        public virtual byte Downtime { get; set; }
        [Parameter("string", "zkeyHash", 4)]
        public virtual string ZkeyHash { get; set; }
        [Parameter("uint8", "downtimeProduct", 5)]
        public virtual byte DowntimeProduct { get; set; }
    }
    public partial class MarketplaceConfig : MarketplaceConfigBase { }

    public class MarketplaceConfigBase 
    {
        [Parameter("tuple", "collateral", 1)]
        public virtual CollateralConfig Collateral { get; set; }
        [Parameter("tuple", "proofs", 2)]
        public virtual ProofConfig Proofs { get; set; }
    }
    public partial class Ask : AskBase { }

    public class AskBase 
    {
        [Parameter("uint64", "slots", 1)]
        public virtual ulong Slots { get; set; }
        [Parameter("uint256", "slotSize", 2)]
        public virtual BigInteger SlotSize { get; set; }
        [Parameter("uint256", "duration", 3)]
        public virtual BigInteger Duration { get; set; }
        [Parameter("uint256", "proofProbability", 4)]
        public virtual BigInteger ProofProbability { get; set; }
        [Parameter("uint256", "reward", 5)]
        public virtual BigInteger Reward { get; set; }
        [Parameter("uint256", "collateral", 6)]
        public virtual BigInteger Collateral { get; set; }
        [Parameter("uint64", "maxSlotLoss", 7)]
        public virtual ulong MaxSlotLoss { get; set; }
    }
    public partial class G1Point : G1PointBase { }

    public class G1PointBase 
    {
        [Parameter("uint256", "x", 1)]
        public virtual BigInteger X { get; set; }
        [Parameter("uint256", "y", 2)]
        public virtual BigInteger Y { get; set; }
    }
    public partial class Fp2Element : Fp2ElementBase { }

    public class Fp2ElementBase 
    {
        [Parameter("uint256", "real", 1)]
        public virtual BigInteger Real { get; set; }
        [Parameter("uint256", "imag", 2)]
        public virtual BigInteger Imag { get; set; }
    }
    public partial class G2Point : G2PointBase { }

    public class G2PointBase 
    {
        [Parameter("tuple", "x", 1)]
        public virtual Fp2Element X { get; set; }
        [Parameter("tuple", "y", 2)]
        public virtual Fp2Element Y { get; set; }
    }
    public partial class Groth16Proof : Groth16ProofBase { }

    public class Groth16ProofBase 
    {
        [Parameter("tuple", "a", 1)]
        public virtual G1Point A { get; set; }
        [Parameter("tuple", "b", 2)]
        public virtual G2Point B { get; set; }
        [Parameter("tuple", "c", 3)]
        public virtual G1Point C { get; set; }
    }
    public partial class Content : ContentBase { }

    public class ContentBase 
    {
        [Parameter("string", "cid", 1)]
        public virtual string Cid { get; set; }
        [Parameter("bytes32", "merkleRoot", 2)]
        public virtual byte[] MerkleRoot { get; set; }
    }
    public partial class Request : RequestBase { }

    public class RequestBase 
    {
        [Parameter("address", "client", 1)]
        public virtual string Client { get; set; }
        [Parameter("tuple", "ask", 2)]
        public virtual Ask Ask { get; set; }
        [Parameter("tuple", "content", 3)]
        public virtual Content Content { get; set; }
        [Parameter("uint256", "expiry", 4)]
        public virtual BigInteger Expiry { get; set; }
        [Parameter("bytes32", "nonce", 5)]
        public virtual byte[] Nonce { get; set; }
    }
    public partial class ActiveSlot : ActiveSlotBase { }

    public class ActiveSlotBase 
    {
        [Parameter("tuple", "request", 1)]
        public virtual Request Request { get; set; }
        [Parameter("uint256", "slotIndex", 2)]
        public virtual BigInteger SlotIndex { get; set; }
    }

}
#pragma warning restore CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
